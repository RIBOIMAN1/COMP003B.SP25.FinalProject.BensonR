// <auto-generated />
using COMP003B.SP25.FinalProject.BensonR.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace COMP003B.SP25.FinalProject.BensonR.Migrations
{
    [DbContext(typeof(ComputerContext))]
    partial class ComputerContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("COMP003B.SP25.FinalProject.BensonR.Models.Customer", b =>
                {
                    b.Property<int>("CustomerId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CustomerId"));

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("CustomerId");

                    b.ToTable("Customers");
                });

            modelBuilder.Entity("COMP003B.SP25.FinalProject.BensonR.Models.Inventory", b =>
                {
                    b.Property<int>("InventoryId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("InventoryId"));

                    b.Property<string>("CompType")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("TechnicianId")
                        .HasColumnType("int");

                    b.HasKey("InventoryId");

                    b.HasIndex("TechnicianId");

                    b.ToTable("Inventories");
                });

            modelBuilder.Entity("COMP003B.SP25.FinalProject.BensonR.Models.Invoice", b =>
                {
                    b.Property<int>("InvoiceId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("InvoiceId"));

                    b.Property<string>("PayStatus")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PayType")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("RepairTicketId")
                        .HasColumnType("int");

                    b.HasKey("InvoiceId");

                    b.ToTable("Invoices");
                });

            modelBuilder.Entity("COMP003B.SP25.FinalProject.BensonR.Models.RepairTicket", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("CustomerId")
                        .HasColumnType("int");

                    b.Property<int?>("InventoryId")
                        .HasColumnType("int");

                    b.Property<int?>("InvoiceId")
                        .HasColumnType("int");

                    b.Property<int>("TechnicianId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CustomerId");

                    b.HasIndex("InventoryId");

                    b.HasIndex("InvoiceId");

                    b.HasIndex("TechnicianId");

                    b.ToTable("RepairTickets");
                });

            modelBuilder.Entity("COMP003B.SP25.FinalProject.BensonR.Models.Technician", b =>
                {
                    b.Property<int>("TechnicianId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("TechnicianId"));

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ExperienceType")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("TechnicianId");

                    b.ToTable("Technicians");
                });

            modelBuilder.Entity("COMP003B.SP25.FinalProject.BensonR.Models.Inventory", b =>
                {
                    b.HasOne("COMP003B.SP25.FinalProject.BensonR.Models.Technician", "Technician")
                        .WithMany()
                        .HasForeignKey("TechnicianId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Technician");
                });

            modelBuilder.Entity("COMP003B.SP25.FinalProject.BensonR.Models.RepairTicket", b =>
                {
                    b.HasOne("COMP003B.SP25.FinalProject.BensonR.Models.Customer", "Customer")
                        .WithMany("RepairTickets")
                        .HasForeignKey("CustomerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("COMP003B.SP25.FinalProject.BensonR.Models.Inventory", "Inventory")
                        .WithMany("RepairTickets")
                        .HasForeignKey("InventoryId");

                    b.HasOne("COMP003B.SP25.FinalProject.BensonR.Models.Invoice", "Invoice")
                        .WithMany("RepairTickets")
                        .HasForeignKey("InvoiceId");

                    b.HasOne("COMP003B.SP25.FinalProject.BensonR.Models.Technician", "Technician")
                        .WithMany("RepairTickets")
                        .HasForeignKey("TechnicianId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Customer");

                    b.Navigation("Inventory");

                    b.Navigation("Invoice");

                    b.Navigation("Technician");
                });

            modelBuilder.Entity("COMP003B.SP25.FinalProject.BensonR.Models.Customer", b =>
                {
                    b.Navigation("RepairTickets");
                });

            modelBuilder.Entity("COMP003B.SP25.FinalProject.BensonR.Models.Inventory", b =>
                {
                    b.Navigation("RepairTickets");
                });

            modelBuilder.Entity("COMP003B.SP25.FinalProject.BensonR.Models.Invoice", b =>
                {
                    b.Navigation("RepairTickets");
                });

            modelBuilder.Entity("COMP003B.SP25.FinalProject.BensonR.Models.Technician", b =>
                {
                    b.Navigation("RepairTickets");
                });
#pragma warning restore 612, 618
        }
    }
}
